Of course. As a Full Professor specializing in Embedded Systems, here are 10 citations written in the CONTINUATION class, extending prior work in data, methods, and concepts.

1.  Building upon the real-time scheduling analysis for mixed-criticality systems proposed by @@CITATION, their work was extended to incorporate probabilistic task execution times, providing a more robust worst-case execution time (WCET) analysis for safety-critical automotive applications.
2.  The energy-harvesting prediction algorithm introduced by @@CITATION was significantly improved by integrating a recurrent neural network, resulting in a 30% increase in prediction accuracy for solar-powered IoT sensor nodes.
3.  @@CITATION expanded their original hardware-in-the-loop (HIL) simulation framework for drone avionics to include fault injection capabilities, enabling a more comprehensive validation of fault-tolerant control algorithms.
4.  Following the secure boot protocol designed by @@CITATION, their method was enhanced with a physical unclonable function (PUF)-based key derivation mechanism, drastically improving resistance to side-channel attacks on low-power microcontrollers.
5.  The lightweight hypervisor for ARM Cortex-A processors, first presented by @@CITATION, was ported and optimized for the emerging RISC-V architecture, demonstrating its versatility and performance across different hardware platforms.
6.  @@CITATION generalized their model-based testing approach for automotive communication stacks, scaling it from Controller Area Network (CAN) to include the more complex Automotive Ethernet protocol, thereby addressing the increased data rates in modern vehicles.
7.  Their previous work on approximate computing for image processing kernels was extended by @@CITATION to develop a design space exploration tool that automatically trades off output quality for energy savings in wearable devices.
8.  The static memory allocation technique for heap-less, real-time operating systems, as described by @@CITATION, was formalized and its worst-case fragmentation behavior was proven to be bounded, increasing its adoption in certified avionics software.
9.  @@CITATION built upon their neural network compression framework for microcontrollers by introducing a novel hardware-aware pruning strategy that accounts for the specific memory hierarchy of the target device, yielding faster inference times.
10. The co-simulation framework integrating Simulink and SystemC-AMS, initially proposed by @@CITATION, was augmented with support for digital twin concepts, enabling real-time synchronization between physical prototypes and their virtual models.

Of course. As a Full Professor in Embedded Systems, here are 10 citations written in the CONTINUATION class, focusing on extending prior work in methods, data, and concepts.

1.  Building upon the energy-aware scheduling heuristics for multicore platforms proposed by @@CITATION, we introduce a dynamic voltage and frequency scaling (DVFS) framework that also accounts for inter-core thermal crosstalk.
2.  While @@CITATION demonstrated the feasibility of using convolutional neural networks for real-time anomaly detection on microcontrollers, our work extends this approach by incorporating temporal features through a novel hybrid CNN-LSTM architecture.
3.  The security analysis of the Controller Area Network (CAN) bus protocol by @@CITATION highlighted several vulnerabilities; we extend this work by proposing and evaluating a lightweight authentication protocol that operates within the strict timing constraints of automotive systems.
4.  Following the model-based testing methodology for state machines outlined by @@CITATION, we develop a tool that automatically generates test cases not only for functional correctness but also for worst-case execution time (WCET) boundary conditions.
5.  @@CITATION established a formal model for verifying safety properties in IoT device firmware; we build upon this model to create a practical, semi-automated verification tool that integrates directly into a common embedded toolchain.
6.  Our framework for deploying TinyML models on ultra-low-power devices extends the quantization techniques described by @@CITATION by introducing a novel mixed-precision scheme that dynamically allocates precision based on layer sensitivity.
7.  The real-time operating system (RTOS) performance analysis conducted by @@CITATION provided valuable benchmarks; we continue this effort by analyzing the impact of modern cache architectures and speculative execution on the predictability of RTOS scheduling primitives.
8.  To address the limitations of static worst-case execution time (WCET) analysis in complex processors, we extend the probabilistic timing analysis method introduced by @@CITATION by incorporating machine learning to refine the probabilistic models based on runtime profiling data.
9.  While @@CITATION successfully applied reinforcement learning for power management in a single embedded device, our work scales this approach to optimize energy consumption across a distributed network of collaborative, energy-harvesting sensor nodes.
10. The simulation framework for networked cyber-physical systems presented by @@CITATION is extended in our work to support hardware-in-the-loop (HIL) testing, enabling a more accurate co-simulation of the physical plant and the embedded control software.

Of course. As a Full Professor in Embedded Systems, here are 10 citations written in the CONTINUATION class, focusing on extending prior work in data, methods, and applications.

1.  Building upon the real-time scheduling analysis for multi-core systems presented by @@CITATION, this work extends the response-time analysis to account for cache-related preemption delays in heterogeneous architectures featuring both CPU and GPU clusters.
2.  While @@CITATION demonstrated the feasibility of using convolutional neural networks for anomaly detection on sensor data, our approach extends this methodology by incorporating temporal features through a novel LSTM-CNN hybrid architecture, significantly improving detection latency on resource-constrained devices.
3.  The security framework for automotive CAN buses proposed by @@CITATION is extended here to include a lightweight intrusion detection system that utilizes message frequency and payload characteristics, providing a second layer of defense against sophisticated replay attacks.
4.  Following the energy harvesting model for IoT nodes introduced by @@CITATION, we extend the predictive energy management algorithm to dynamically adapt its policy based on real-time forecasts of both energy intake and task criticality.
5.  @@CITATION established a formal model for verifying safety properties in learning-enabled cyber-physical systems; our work extends this verification framework to account for the quantization errors inherent in deploying neural networks on fixed-point microcontrollers.
6.  The hardware-in-the-loop (HIL) simulation platform described by @@CITATION is extended in this paper to support fault injection testing for safety-critical systems, allowing for the automated validation of failure mode and effects analysis (FMEA).
7.  While @@CITATION provided a comprehensive survey of operating systems for the Internet of Things, our empirical study extends this body of work by quantitatively comparing the real-time performance and memory overhead of Contiki-NG, Zephyr, and FreeRTOS under identical industrial workloads.
8.  The method for secure over-the-air (OTA) updates by @@CITATION is extended with a novel differential update mechanism, drastically reducing the required bandwidth and energy consumption for deploying patches to a large fleet of embedded devices.
9.  @@CITATION proposed a promising approach for approximating complex control laws to reduce computational load; we extend this concept by introducing a formal guarantee on the approximation error, enabling its safe use in avionics systems.
10. The probabilistic timing analysis (PTA) techniques pioneered by @@CITATION are extended in our research to cover multi-core processors with shared memory buses, providing a more accurate worst-case execution time (WCET) bound for hard real-time tasks.

Of course. Here are 10 citations in the CONTINUATION class, written from the perspective of a Full Professor in Embedded Systems.

1.  Our design of a hardware-accelerated CAN-FD protocol stack extends the software-based framework proposed by @@CITATION, achieving a 20x reduction in message latency for real-time automotive systems.
2.  The security primitives for this IoT device are built upon the trusted execution environment (TEE) architecture described by @@CITATION, which we have further hardened against side-channel attacks using novel power-gating techniques.
3.  This work on energy-aware scheduling for multicore sensor nodes continues the research initiated by @@CITATION, expanding their single-core heuristic to a heterogeneous architecture and incorporating dynamic voltage and frequency scaling (DVFS) states.
4.  We employ a hybrid real-time scheduling approach, combining the fixed-priority preemptive scheduling from @@CITATION with a non-preemptive server for low-priority tasks to better manage shared resources in our automotive control unit.
5.  The machine learning model for predictive maintenance is deployed on the microcontroller using the TensorFlow Lite Micro framework, as outlined by @@CITATION, but we have significantly optimized the kernel operations for the specific ARM Cortex-M55's DSP extensions.
6.  Our method for securing over-the-air (OTA) updates extends the work of @@CITATION by integrating a hardware-based root of trust for cryptographic signature verification, moving beyond their purely software-based solution.
7.  The proposed energy harvesting-aware power management system is inspired by the model predictive control (MPC) strategy of @@CITATION; we have adapted their algorithm to account for the highly stochastic nature of indoor solar cells in wearable devices.
8.  This paper details a formal verification methodology for safety-critical embedded software, building upon the model checking tools developed by @@CITATION to now handle complex, multi-rate periodic task sets with shared resources.
9.  The design of our fault-tolerant gyroscope sensor fusion algorithm follows the quaternion-based Kalman filter introduced by @@CITATION, which we have extended with an adaptive mechanism to detect and mitigate sensor drift in real-time.
10. We implement a real-time operating system (RTOS) for RISC-V platforms, continuing the development of the open-source foundation established by @@CITATION by adding formal timing guarantees and support for the latest RISC-V privileged architecture specification.

Of course. As a Full Professor in Embedded Systems, here are 10 citations written in the CONTINUATION style, extending prior work in key areas of the field.

1. Building upon the energy-aware scheduling heuristic for multicore platforms proposed by @@CITATION, we extended their model to incorporate dynamic voltage and frequency scaling (DVFS) and process variation, achieving a 22% improvement in energy efficiency under real-world workload traces.

2. @@CITATION demonstrated the feasibility of using a lightweight AES-128 co-processor for secure IoT communication; we have extended this architecture to support post-quantum cryptography algorithms, specifically CRYSTALS-Kyber, while maintaining real-time constraints on a resource-constrained Cortex-M4 microcontroller.

3. The real-time operating system (RTOS) analysis framework introduced by @@CITATION was extended by our work to formally verify temporal properties of interrupt service routines (ISRs) and task preemption scenarios using model checking, significantly enhancing its ability to detect priority inversion deadlocks.

4. Following the model-based design methodology for automotive systems outlined by @@CITATION, we extended their AUTOSAR-compliant toolchain to automatically generate formally verified C code from Simulink models, reducing manual coding errors and improving traceability for safety-critical applications (ISO 26262).

5. @@CITATION established a foundational benchmark for worst-case execution time (WCET) analysis on modern processors with deep pipelines; our work extends their static analysis tool to account for the effects of speculative execution and branch prediction, providing more precise and safe timing guarantees.

6. The hardware-in-the-loop (HIL) simulation platform for drone control systems developed by @@CITATION was extended in our research to incorporate high-fidelity models of sensor noise and communication latency, creating a more robust test environment for validating fault-tolerant flight controllers.

7. We extended the neural network compression techniques for computer vision on embedded devices, first pioneered by @@CITATION, by introducing a novel hardware-aware quantization algorithm that optimizes for the specific word-lengths and multiplier architectures of low-power FPGAs.

8. @@CITATION presented a novel approach for detecting concurrency bugs in embedded software; our subsequent work extends their dynamic analysis tool to not only detect but also automatically suggest patches for data race conditions by analyzing event traces and shared resource access patterns.

9. The research on wear-leveling algorithms for NAND flash memory by @@CITATION was extended by our group through the development of a new hybrid algorithm that combines their page-level remapping technique with a novel block-level approach, substantially increasing the lifetime of flash-based storage in embedded systems.

10. Inspired by the predictable communication protocol for time-sensitive networking (TSN) described by @@CITATION, we extended their framework to support dynamic reconfiguration of network schedules, enabling runtime adaptation to changing traffic patterns in industrial automation systems without violating real-time deadlines.

Of course. As a Full Professor in Embedded Systems, here are 10 citations written in the CONTINUATION style, building upon and extending the data, methods, and concepts of the cited works.

1.  The principles of mixed-criticality scheduling proposed by @@CITATION have been extended to heterogeneous multi-core platforms, incorporating dynamic power management to satisfy both temporal and energy constraints.
2.  While @@CITATION established a robust benchmark for real-time network performance in automotive systems, their work has been expanded to include worst-case traversal time (WCTT) analysis for time-sensitive networking (TSN) standards under faulty conditions.
3.  The model-based testing framework for safety-critical systems introduced by @@CITATION was subsequently enhanced with automated test case generation from Simulink models, significantly improving functional coverage metrics.
4.  Building upon the hardware-in-the-loop (HIL) simulation architecture described by @@CITATION, our work integrates a virtual ECU layer to enable earlier software testing and validation before physical hardware is available.
5.  The lightweight encryption protocol for IoT devices presented by @@CITATION has been rigorously evaluated on a new dataset of network traffic, revealing its resilience against side-channel attacks on ultra-low-power microcontrollers.
6.  Following the methodology for energy profiling of embedded firmware outlined by @@CITATION, we applied a similar tracing technique to a new class of intermittent computing devices, correlating power states with specific application routines.
7.  The hypervisor for ARM Cortex-A processors developed by @@CITATION served as the foundation for our research, which added support for device pass-through and real-time guarantees in mixed-criticality deployments.
8.  @@CITATION provided a seminal survey of formal verification techniques for embedded software; our subsequent research has focused on scaling these methods, specifically bounded model checking, for complex AUTOSAR-based applications.
9.  The predictable execution model (PREM) for COTS processors, as pioneered by @@CITATION, has been adapted and refined for modern RISC-V architectures, demonstrating its efficacy in reducing worst-case execution time (WCET) jitter.
10. The edge AI accelerator design proposed by @@CITATION was further optimized by employing a novel weight pruning algorithm co-designed with the hardware architecture, yielding a 3x improvement in inferences per joule.

Of course. As a Full Professor specializing in Embedded Systems, here are 10 citations written in the CONTINUATION style, extending the data, methods, or concepts of prior work.

1.  The seminal work on the fixed-priority rate-monotonic scheduling algorithm by @@CITATION has been extended to more complex multi-core and many-core architectures, introducing novel techniques for partitioning and global scheduling that maintain real-time guarantees under increased computational loads.
2.  While the original model-checking framework for timed automata introduced by @@CITATION provided a formal verification method for real-time systems, subsequent research has successfully scaled these techniques to verify the timing properties of large-scale, distributed cyber-physical systems with complex sensor-actuator networks.
3.  The principles of energy-efficient scheduling for embedded processors, as formalized by @@CITATION, have been built upon to develop dynamic voltage and frequency scaling (DVFS) algorithms that are predictive and adaptive, leveraging machine learning to forecast computational workloads in IoT devices.
4.  Following the security-through-obscurity approach of micro-architectural features like ARM TrustZone, as described by @@CITATION, recent research has focused on developing formal methods and side-channel resistant designs to protect these very secure enclaves from a new class of micro-architectural attacks.
5.  The lightweight TCP/IP stack (lwIP) presented by @@CITATION, designed for resource-constrained systems, has been significantly optimized and extended to support modern IoT communication protocols like MQTT and CoAP, while maintaining its minimal memory footprint.
6.  Building upon the foundational research into hardware/software co-design methodologies by @@CITATION, recent work has successfully applied these co-design principles to the development of heterogeneous System-on-Chip (SoC) architectures, seamlessly integrating FPGA fabrics with multicore processors for accelerated, domain-specific computing.
7.  The original research on the predictable execution model (PREM) by @@CITATION, which decouples memory and computation to improve worst-case execution time (WCET) analysis, has been refined and its principles applied to commercial off-the-shelf (COTS) multi-core processors to mitigate DRAM interference.
8.  The high-integrity, memory-safe programming language Rust, whose principles for embedded systems were explored by @@CITATION, is now being formally verified and its ownership model adapted to create safety-certifiable kernels for real-time operating systems in avionics and automotive applications.
9.  The concept of "approximate computing" for energy savings, initially proposed for specific hardware modules by @@CITATION, has been generalized into a cross-layer design methodology, encompassing programming models, compilers, and run-time systems that strategically trade off accuracy for significant gains in energy efficiency across the entire embedded system stack.
10. The pioneering work on the RISC-V instruction set architecture by @@CITATION has spurred the development of a rich ecosystem of open-source, real-time capable processor cores and accompanying system software, enabling a new era of customizable and verifiable computing platforms for critical embedded applications.

Of course. As a Full Professor specializing in Embedded Systems, here are 10 citations written in the CONTINUATION class, designed to extend the data, methods, or findings of the referenced work.

1.  Building upon the real-time scheduling analysis for multi-core systems presented by @@CITATION, their work was extended to account for shared memory contention and cache-related preemption delays, providing a more pessimistic but vastly more realistic worst-case execution time (WCET) model.
2.  The security framework for IoT device attestation proposed by @@CITATION was significantly expanded upon by incorporating a physical unclonable function (PUF) for hardware-based root-of-trust, thereby mitigating software-only vulnerabilities and enhancing resilience against physical attacks.
3.  @@CITATION laid the groundwork for model-based design of embedded control systems; subsequent research extended their toolchain to automatically generate formally verified C code from Simulink models, ensuring functional correctness and adherence to timing constraints.
4.  Following the energy-harvesting prediction algorithm introduced by @@CITATION, their methodology was advanced by integrating a reinforcement learning agent that dynamically adapts the prediction horizon and duty-cycling policy based on real-time harvested energy patterns.
5.  While @@CITATION demonstrated the feasibility of convolutional neural networks on microcontrollers, their work was extended by developing novel quantization-aware training techniques and specialized kernel libraries that reduced memory footprint by 60% while maintaining >98% model accuracy.
6.  The hypervisor for mixed-criticality systems described by @@CITATION provided strong temporal isolation; this work was continued by formalizing and verifying the hypervisor's own timing behavior and resource management logic using theorem proving, eliminating a critical layer of uncertainty.
7.  @@CITATION pioneered the use of Rust for safety-critical embedded software; their compiler toolchain and runtime were subsequently extended to formally guarantee the absence of data races and certain classes of memory errors in applications targeting ISO 26262 ASIL-D certification.
8.  The wireless sensor network (WSN) simulation framework from @@CITATION was greatly enhanced by integrating high-fidelity radio frequency (RF) propagation models and hardware-in-the-loop (HIL) capabilities, allowing for the validation of protocols against real-world physical layer effects.
9.  In continuation of the work by @@CITATION on fault-tolerant distributed embedded systems, their Byzantine fault tolerance (BFT) protocol was optimized for low-latency automotive and avionic networks, achieving consensus with a 40% reduction in communication rounds.
10. The hardware/software co-design methodology for FPGA-based systems put forward by @@CITATION was extended through the development of a high-level synthesis (HLS) tool that automatically partitions applications between a hard processor system (HPS) and programmable logic (PL) based on real-time performance profiling.

Of course. As a Full Professor specializing in Embedded Systems, here are 10 citations written in the CONTINUATION class, designed to extend the data, methods, or findings of the referenced work.

1.  Building upon the real-time operating system scheduling analysis of @@CITATION, we extend their model to account for the effects of cache-related preemption delays in multi-core ARM Cortex-R5F architectures.
2.  The hardware/software co-design methodology introduced by @@CITATION is extended in our work to incorporate a formal verification layer, enabling automated checking of temporal properties against the system's finite-state machine model before synthesis.
3.  While @@CITATION demonstrated a successful side-channel attack on a software AES implementation, our work extends this analysis to a hardware-accelerated cryptographic core, revealing new vulnerabilities introduced by power management unit activity.
4.  Following the model-based design approach for automotive systems proposed by @@CITATION, we extend their framework with a library of AUTOSAR-compliant software components to facilitate rapid prototyping and automatic code generation for body control modules.
5.  The probabilistic timing analysis (pWCET) technique pioneered by @@CITATION is extended in our research to create a hybrid method that combines measurement-based evidence with static analysis to produce tighter and more reliable worst-case execution time bounds.
6.  @@CITATION established a benchmark for energy consumption of wireless sensor nodes; we extend their data set by profiling a new generation of ultra-low-power microcontrollers featuring integrated sub-GHz radios and duty-cycled deep sleep modes.
7.  We extend the lightweight intrusion detection system for Controller Area Networks proposed by @@CITATION by incorporating a recurrent neural network to detect more complex, multi-message attack patterns that evade simpler rule-based checks.
8.  The work of @@CITATION on secure over-the-air updates for IoT devices is extended here to develop a fault-tolerant, resumable firmware transfer protocol capable of operating over unreliable and low-bandwidth LPWAN connections like LoRaWAN.
9.  While @@CITATION provided a formal proof for a specific memory protection unit configuration, our contribution extends their verification methodology to be applicable across a broader class of microkernel-based embedded systems.
10. The simulation framework for networked cyber-physical systems developed by @@CITATION is extended in this paper to integrate high-fidelity plant models from Simulink, enabling a more accurate co-simulation of the control algorithms and their physical environment.

Of course. As a Full Professor specializing in Embedded Systems, here are 10 citations written in the CONTINUATION class, designed to extend the data, methods, or concepts of the cited work.

1.  Recent work has successfully applied the Real-Time Calculus framework to multi-core architectures with shared memory contention; @@CITATION extended this analysis to include the effects of temperature-dependent voltage scaling, providing a more holistic power-performance model for next-generation avionics systems.

2.  While the original seL4 microkernel verification was a landmark achievement in formal methods, @@CITATION built upon this verified codebase to formally prove the correctness of a complete, memory-safe TCP/IP network stack running atop it, a critical step towards truly secure IoT edge devices.

3.  The initial proof-of-concept for in-sensor near-sensor computing demonstrated a 10x energy reduction for simple image filters; @@CITATION scaled this approach, designing a fabric of lightweight RISC-V cores integrated directly with the CMOS image sensor to enable real-time convolutional feature extraction for always-on vision applications.

4.  Early research into intermittent computing focused on simple task checkpointing; @@CITATION radically extended this concept by developing a probabilistic forward progress guarantee and a resilient distributed task graph model, enabling complex sensing applications to run reliably on energy-harvesting devices despite frequent power failures.

5.  Building upon the hardware security module (HSM) architectures designed for automotive systems, @@CITATION adapted and extended the core cryptographic primitives and secure boot process to create a scalable, hardware-enforced root of trust for minimally-attended industrial IoT controllers.

6.  The model-based engineering toolchain introduced by @@CITATION for automotive software was highly influential; our work extends their component meta-model and timing annotation language to support the unique challenges of mixed-criticality systems, where safety-critical and best-effort functions must coexist on the same multi-core processor.

7.  Following the methodology for fuzzing IoT network protocols established by @@CITATION, we extended their fuzzer to not only generate malformed packets but also to systematically mutate the internal state machines of embedded protocol stacks, uncovering a new class of deep state logic errors.

8.  The pioneering work on time-sensitive networking (TSN) for industrial Ethernet provided a solid foundation for deterministic communication; @@CITATION extended the TSN standards by developing a novel scheduling algorithm and hardware queue design that guarantees bounded latency even under severe electromagnetic interference typical in automotive environments.

9.  Initial research into approximate computing for DSP workloads showed great promise in simulation; @@CITATION extended these concepts into a fabricated ASIC, designing an inexact adder cell and a precision-scalable MAC unit that dynamically trades numerical accuracy for a 40% reduction in energy consumption on audio processing kernels.

10. The simulation framework for vehicular ad-hoc networks (VANETs) provided valuable insights into communication delays; @@CITATION extended this work by integrating a high-fidelity hardware-in-the-loop (HIL) testbed with actual automotive ECUs and CAN/FD buses, validating the simulation models against real-world electromagnetic and network interference.

